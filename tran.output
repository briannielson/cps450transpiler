State 13 conflicts: 6 reduce/reduce
State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements '}'

    2 Declarations: Declaration Declarations
    3             | Declaration
    4             | %empty

    5 Declaration: Type IDENTIFIER ';'
    6            | Type IDENTIFIER '[' INTEGER ']' ';'

    7 Type: TYPE_BOOL
    8     | TYPE_CHAR
    9     | TYPE_FLOAT
   10     | TYPE_INT

   11 Statements: Statement Statements
   12           | %empty

   13 Statement: ';'
   14          | Block
   15          | Assignment
   16          | Ifstate
   17          | Whilestate

   18 Block: '{' Statements '}'

   19 Assignment: IDENTIFIER '=' Expression ';'
   20           | IDENTIFIER '[' Expression ']' '=' Expression ';'

   21 Ifstate: RESV_IF '(' Expression ')' Statement
   22        | RESV_IF '(' Expression ')' Statement RESV_ELSE Statement

   23 Whilestate: RESV_WHILE '(' Expression ')' Statement

   24 Expression: Conjunction
   25           | Conjunction LOG_OR Conjunction

   26 Conjunction: Equality
   27            | Equality LOG_AND Equality

   28 Equality: Relation
   29         | Relation EquOp Relation

   30 EquOp: CMP_EQUAL
   31      | CMP_NOTEQUAL

   32 Relation: Addition
   33         | Addition RelOp Addition

   34 RelOp: '<'
   35      | CMP_LTEQ
   36      | CMP_GREQ
   37      | '>'

   38 Addition: Term
   39         | Term AddOp Term

   40 AddOp: '+'
   41      | '-'

   42 Term: Factor
   43     | Factor MulOp Factor

   44 MulOp: '*'
   45      | '/'
   46      | '%'

   47 Factor: Primary
   48       | UnaryOp Primary

   49 UnaryOp: '-'
   50        | '!'

   51 Primary: IDENTIFIER '[' Expression ']'
   52        | Literal
   53        | '(' Expression ')'
   54        | Type '(' Expression ')'

   55 Literal: INTEGER
   56        | FLOAT
   57        | CHAR
   58        | RESV_TRUE
   59        | RESV_FALSE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 50
'%' (37) 46
'(' (40) 1 21 22 23 53 54
')' (41) 1 21 22 23 53 54
'*' (42) 44
'+' (43) 40
'-' (45) 41 49
'/' (47) 45
';' (59) 5 6 13 19 20
'<' (60) 34
'=' (61) 19 20
'>' (62) 37
'[' (91) 6 20 51
']' (93) 6 20 51
'{' (123) 1 18
'}' (125) 1 18
error (256)
CMP_EQUAL (258) 30
CMP_NOTEQUAL (259) 31
CMP_GREQ (260) 36
CMP_LTEQ (261) 35
RESV_WHILE (262) 23
RESV_TRUE (263) 58
RESV_FALSE (264) 59
RESV_MAIN (265) 1
TYPE_BOOL (266) 7
TYPE_CHAR (267) 8
TYPE_FLOAT (268) 9
TYPE_INT (269) 1 10
LOG_AND (270) 27
LOG_OR (271) 25
INTEGER (272) 6 55
IDENTIFIER (273) 5 6 19 20 51
CHAR (274) 57
FLOAT (275) 56
RESV_ELSE (276) 22
RESV_IF (277) 21 22


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Program (40)
    on left: 1, on right: 0
Declarations (41)
    on left: 2 3 4, on right: 1 2
Declaration (42)
    on left: 5 6, on right: 2 3
Type (43)
    on left: 7 8 9 10, on right: 5 6 54
Statements (44)
    on left: 11 12, on right: 1 11 18
Statement (45)
    on left: 13 14 15 16 17, on right: 11 21 22 23
Block (46)
    on left: 18, on right: 14
Assignment (47)
    on left: 19 20, on right: 15
Ifstate (48)
    on left: 21 22, on right: 16
Whilestate (49)
    on left: 23, on right: 17
Expression (50)
    on left: 24 25, on right: 19 20 21 22 23 51 53 54
Conjunction (51)
    on left: 26 27, on right: 24 25
Equality (52)
    on left: 28 29, on right: 26 27
EquOp (53)
    on left: 30 31, on right: 29
Relation (54)
    on left: 32 33, on right: 28 29
RelOp (55)
    on left: 34 35 36 37, on right: 33
Addition (56)
    on left: 38 39, on right: 32 33
AddOp (57)
    on left: 40 41, on right: 39
Term (58)
    on left: 42 43, on right: 38 39
MulOp (59)
    on left: 44 45 46, on right: 43
Factor (60)
    on left: 47 48, on right: 42 43
UnaryOp (61)
    on left: 49 50, on right: 48
Primary (62)
    on left: 51 52 53 54, on right: 47 48
Literal (63)
    on left: 55 56 57 58 59, on right: 52


State 0

    0 $accept: . Program $end

    TYPE_INT  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: TYPE_INT . RESV_MAIN '(' ')' '{' Declarations Statements '}'

    RESV_MAIN  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: TYPE_INT RESV_MAIN . '(' ')' '{' Declarations Statements '}'

    '('  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: TYPE_INT RESV_MAIN '(' . ')' '{' Declarations Statements '}'

    ')'  shift, and go to state 6


State 6

    1 Program: TYPE_INT RESV_MAIN '(' ')' . '{' Declarations Statements '}'

    '{'  shift, and go to state 7


State 7

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' . Declarations Statements '}'

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 12
    Declaration   go to state 13
    Type          go to state 14


State 8

    7 Type: TYPE_BOOL .

    $default  reduce using rule 7 (Type)


State 9

    8 Type: TYPE_CHAR .

    $default  reduce using rule 8 (Type)


State 10

    9 Type: TYPE_FLOAT .

    $default  reduce using rule 9 (Type)


State 11

   10 Type: TYPE_INT .

    $default  reduce using rule 10 (Type)


State 12

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations . Statements '}'

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    $default  reduce using rule 12 (Statements)

    Statements  go to state 20
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 13

    2 Declarations: Declaration . Declarations
    3             | Declaration .

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    RESV_WHILE  reduce using rule 3 (Declarations)
    RESV_WHILE  [reduce using rule 4 (Declarations)]
    IDENTIFIER  reduce using rule 3 (Declarations)
    IDENTIFIER  [reduce using rule 4 (Declarations)]
    RESV_IF     reduce using rule 3 (Declarations)
    RESV_IF     [reduce using rule 4 (Declarations)]
    '{'         reduce using rule 3 (Declarations)
    '{'         [reduce using rule 4 (Declarations)]
    '}'         reduce using rule 3 (Declarations)
    '}'         [reduce using rule 4 (Declarations)]
    ';'         reduce using rule 3 (Declarations)
    ';'         [reduce using rule 4 (Declarations)]
    $default    reduce using rule 3 (Declarations)

    Declarations  go to state 26
    Declaration   go to state 13
    Type          go to state 14


State 14

    5 Declaration: Type . IDENTIFIER ';'
    6            | Type . IDENTIFIER '[' INTEGER ']' ';'

    IDENTIFIER  shift, and go to state 27


State 15

   23 Whilestate: RESV_WHILE . '(' Expression ')' Statement

    '('  shift, and go to state 28


State 16

   19 Assignment: IDENTIFIER . '=' Expression ';'
   20           | IDENTIFIER . '[' Expression ']' '=' Expression ';'

    '['  shift, and go to state 29
    '='  shift, and go to state 30


State 17

   21 Ifstate: RESV_IF . '(' Expression ')' Statement
   22        | RESV_IF . '(' Expression ')' Statement RESV_ELSE Statement

    '('  shift, and go to state 31


State 18

   18 Block: '{' . Statements '}'

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    $default  reduce using rule 12 (Statements)

    Statements  go to state 32
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 19

   13 Statement: ';' .

    $default  reduce using rule 13 (Statement)


State 20

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements . '}'

    '}'  shift, and go to state 33


State 21

   11 Statements: Statement . Statements

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    $default  reduce using rule 12 (Statements)

    Statements  go to state 34
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 22

   14 Statement: Block .

    $default  reduce using rule 14 (Statement)


State 23

   15 Statement: Assignment .

    $default  reduce using rule 15 (Statement)


State 24

   16 Statement: Ifstate .

    $default  reduce using rule 16 (Statement)


State 25

   17 Statement: Whilestate .

    $default  reduce using rule 17 (Statement)


State 26

    2 Declarations: Declaration Declarations .

    $default  reduce using rule 2 (Declarations)


State 27

    5 Declaration: Type IDENTIFIER . ';'
    6            | Type IDENTIFIER . '[' INTEGER ']' ';'

    ';'  shift, and go to state 35
    '['  shift, and go to state 36


State 28

   23 Whilestate: RESV_WHILE '(' . Expression ')' Statement

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 47
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 29

   20 Assignment: IDENTIFIER '[' . Expression ']' '=' Expression ';'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 57
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 30

   19 Assignment: IDENTIFIER '=' . Expression ';'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 58
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 31

   21 Ifstate: RESV_IF '(' . Expression ')' Statement
   22        | RESV_IF '(' . Expression ')' Statement RESV_ELSE Statement

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 59
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 32

   18 Block: '{' Statements . '}'

    '}'  shift, and go to state 60


State 33

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements '}' .

    $default  reduce using rule 1 (Program)


State 34

   11 Statements: Statement Statements .

    $default  reduce using rule 11 (Statements)


State 35

    5 Declaration: Type IDENTIFIER ';' .

    $default  reduce using rule 5 (Declaration)


State 36

    6 Declaration: Type IDENTIFIER '[' . INTEGER ']' ';'

    INTEGER  shift, and go to state 61


State 37

   49 UnaryOp: '-' .

    $default  reduce using rule 49 (UnaryOp)


State 38

   58 Literal: RESV_TRUE .

    $default  reduce using rule 58 (Literal)


State 39

   59 Literal: RESV_FALSE .

    $default  reduce using rule 59 (Literal)


State 40

   55 Literal: INTEGER .

    $default  reduce using rule 55 (Literal)


State 41

   51 Primary: IDENTIFIER . '[' Expression ']'

    '['  shift, and go to state 62


State 42

   57 Literal: CHAR .

    $default  reduce using rule 57 (Literal)


State 43

   56 Literal: FLOAT .

    $default  reduce using rule 56 (Literal)


State 44

   53 Primary: '(' . Expression ')'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 63
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 45

   50 UnaryOp: '!' .

    $default  reduce using rule 50 (UnaryOp)


State 46

   54 Primary: Type . '(' Expression ')'

    '('  shift, and go to state 64


State 47

   23 Whilestate: RESV_WHILE '(' Expression . ')' Statement

    ')'  shift, and go to state 65


State 48

   24 Expression: Conjunction .
   25           | Conjunction . LOG_OR Conjunction

    LOG_OR  shift, and go to state 66

    $default  reduce using rule 24 (Expression)


State 49

   26 Conjunction: Equality .
   27            | Equality . LOG_AND Equality

    LOG_AND  shift, and go to state 67

    $default  reduce using rule 26 (Conjunction)


State 50

   28 Equality: Relation .
   29         | Relation . EquOp Relation

    CMP_EQUAL     shift, and go to state 68
    CMP_NOTEQUAL  shift, and go to state 69

    $default  reduce using rule 28 (Equality)

    EquOp  go to state 70


State 51

   32 Relation: Addition .
   33         | Addition . RelOp Addition

    CMP_GREQ  shift, and go to state 71
    CMP_LTEQ  shift, and go to state 72
    '>'       shift, and go to state 73
    '<'       shift, and go to state 74

    $default  reduce using rule 32 (Relation)

    RelOp  go to state 75


State 52

   38 Addition: Term .
   39         | Term . AddOp Term

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77

    $default  reduce using rule 38 (Addition)

    AddOp  go to state 78


State 53

   42 Term: Factor .
   43     | Factor . MulOp Factor

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 42 (Term)

    MulOp  go to state 82


State 54

   48 Factor: UnaryOp . Primary

    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44

    Type     go to state 46
    Primary  go to state 83
    Literal  go to state 56


State 55

   47 Factor: Primary .

    $default  reduce using rule 47 (Factor)


State 56

   52 Primary: Literal .

    $default  reduce using rule 52 (Primary)


State 57

   20 Assignment: IDENTIFIER '[' Expression . ']' '=' Expression ';'

    ']'  shift, and go to state 84


State 58

   19 Assignment: IDENTIFIER '=' Expression . ';'

    ';'  shift, and go to state 85


State 59

   21 Ifstate: RESV_IF '(' Expression . ')' Statement
   22        | RESV_IF '(' Expression . ')' Statement RESV_ELSE Statement

    ')'  shift, and go to state 86


State 60

   18 Block: '{' Statements '}' .

    $default  reduce using rule 18 (Block)


State 61

    6 Declaration: Type IDENTIFIER '[' INTEGER . ']' ';'

    ']'  shift, and go to state 87


State 62

   51 Primary: IDENTIFIER '[' . Expression ']'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 88
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 63

   53 Primary: '(' Expression . ')'

    ')'  shift, and go to state 89


State 64

   54 Primary: Type '(' . Expression ')'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 90
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 65

   23 Whilestate: RESV_WHILE '(' Expression ')' . Statement

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    Statement   go to state 91
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 66

   25 Expression: Conjunction LOG_OR . Conjunction

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Conjunction  go to state 92
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 67

   27 Conjunction: Equality LOG_AND . Equality

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type      go to state 46
    Equality  go to state 93
    Relation  go to state 50
    Addition  go to state 51
    Term      go to state 52
    Factor    go to state 53
    UnaryOp   go to state 54
    Primary   go to state 55
    Literal   go to state 56


State 68

   30 EquOp: CMP_EQUAL .

    $default  reduce using rule 30 (EquOp)


State 69

   31 EquOp: CMP_NOTEQUAL .

    $default  reduce using rule 31 (EquOp)


State 70

   29 Equality: Relation EquOp . Relation

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type      go to state 46
    Relation  go to state 94
    Addition  go to state 51
    Term      go to state 52
    Factor    go to state 53
    UnaryOp   go to state 54
    Primary   go to state 55
    Literal   go to state 56


State 71

   36 RelOp: CMP_GREQ .

    $default  reduce using rule 36 (RelOp)


State 72

   35 RelOp: CMP_LTEQ .

    $default  reduce using rule 35 (RelOp)


State 73

   37 RelOp: '>' .

    $default  reduce using rule 37 (RelOp)


State 74

   34 RelOp: '<' .

    $default  reduce using rule 34 (RelOp)


State 75

   33 Relation: Addition RelOp . Addition

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type      go to state 46
    Addition  go to state 95
    Term      go to state 52
    Factor    go to state 53
    UnaryOp   go to state 54
    Primary   go to state 55
    Literal   go to state 56


State 76

   40 AddOp: '+' .

    $default  reduce using rule 40 (AddOp)


State 77

   41 AddOp: '-' .

    $default  reduce using rule 41 (AddOp)


State 78

   39 Addition: Term AddOp . Term

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type     go to state 46
    Term     go to state 96
    Factor   go to state 53
    UnaryOp  go to state 54
    Primary  go to state 55
    Literal  go to state 56


State 79

   44 MulOp: '*' .

    $default  reduce using rule 44 (MulOp)


State 80

   45 MulOp: '/' .

    $default  reduce using rule 45 (MulOp)


State 81

   46 MulOp: '%' .

    $default  reduce using rule 46 (MulOp)


State 82

   43 Term: Factor MulOp . Factor

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type     go to state 46
    Factor   go to state 97
    UnaryOp  go to state 54
    Primary  go to state 55
    Literal  go to state 56


State 83

   48 Factor: UnaryOp Primary .

    $default  reduce using rule 48 (Factor)


State 84

   20 Assignment: IDENTIFIER '[' Expression ']' . '=' Expression ';'

    '='  shift, and go to state 98


State 85

   19 Assignment: IDENTIFIER '=' Expression ';' .

    $default  reduce using rule 19 (Assignment)


State 86

   21 Ifstate: RESV_IF '(' Expression ')' . Statement
   22        | RESV_IF '(' Expression ')' . Statement RESV_ELSE Statement

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    Statement   go to state 99
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 87

    6 Declaration: Type IDENTIFIER '[' INTEGER ']' . ';'

    ';'  shift, and go to state 100


State 88

   51 Primary: IDENTIFIER '[' Expression . ']'

    ']'  shift, and go to state 101


State 89

   53 Primary: '(' Expression ')' .

    $default  reduce using rule 53 (Primary)


State 90

   54 Primary: Type '(' Expression . ')'

    ')'  shift, and go to state 102


State 91

   23 Whilestate: RESV_WHILE '(' Expression ')' Statement .

    $default  reduce using rule 23 (Whilestate)


State 92

   25 Expression: Conjunction LOG_OR Conjunction .

    $default  reduce using rule 25 (Expression)


State 93

   27 Conjunction: Equality LOG_AND Equality .

    $default  reduce using rule 27 (Conjunction)


State 94

   29 Equality: Relation EquOp Relation .

    $default  reduce using rule 29 (Equality)


State 95

   33 Relation: Addition RelOp Addition .

    $default  reduce using rule 33 (Relation)


State 96

   39 Addition: Term AddOp Term .

    $default  reduce using rule 39 (Addition)


State 97

   43 Term: Factor MulOp Factor .

    $default  reduce using rule 43 (Term)


State 98

   20 Assignment: IDENTIFIER '[' Expression ']' '=' . Expression ';'

    '-'         shift, and go to state 37
    RESV_TRUE   shift, and go to state 38
    RESV_FALSE  shift, and go to state 39
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    CHAR        shift, and go to state 42
    FLOAT       shift, and go to state 43
    '('         shift, and go to state 44
    '!'         shift, and go to state 45

    Type         go to state 46
    Expression   go to state 103
    Conjunction  go to state 48
    Equality     go to state 49
    Relation     go to state 50
    Addition     go to state 51
    Term         go to state 52
    Factor       go to state 53
    UnaryOp      go to state 54
    Primary      go to state 55
    Literal      go to state 56


State 99

   21 Ifstate: RESV_IF '(' Expression ')' Statement .
   22        | RESV_IF '(' Expression ')' Statement . RESV_ELSE Statement

    RESV_ELSE  shift, and go to state 104

    RESV_ELSE  [reduce using rule 21 (Ifstate)]
    $default   reduce using rule 21 (Ifstate)


State 100

    6 Declaration: Type IDENTIFIER '[' INTEGER ']' ';' .

    $default  reduce using rule 6 (Declaration)


State 101

   51 Primary: IDENTIFIER '[' Expression ']' .

    $default  reduce using rule 51 (Primary)


State 102

   54 Primary: Type '(' Expression ')' .

    $default  reduce using rule 54 (Primary)


State 103

   20 Assignment: IDENTIFIER '[' Expression ']' '=' Expression . ';'

    ';'  shift, and go to state 105


State 104

   22 Ifstate: RESV_IF '(' Expression ')' Statement RESV_ELSE . Statement

    RESV_WHILE  shift, and go to state 15
    IDENTIFIER  shift, and go to state 16
    RESV_IF     shift, and go to state 17
    '{'         shift, and go to state 18
    ';'         shift, and go to state 19

    Statement   go to state 106
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 105

   20 Assignment: IDENTIFIER '[' Expression ']' '=' Expression ';' .

    $default  reduce using rule 20 (Assignment)


State 106

   22 Ifstate: RESV_IF '(' Expression ')' Statement RESV_ELSE Statement .

    $default  reduce using rule 22 (Ifstate)
