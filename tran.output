Rules useless in parser due to conflicts

   23 Ifstate: RESV_IF '(' Expression ')' Statement RESV_ELSE Statement


Grammar

    0 $accept: Program $end

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements '}'

    2 Declarations: Declaration Declarations
    3             | %empty

    4 Declaration: Type IDENTIFIER EOL
    5            | Type IDENTIFIER '[' INTEGER ']' EOL
    6            | Type IDENTIFIER ',' Declaration
    7            | Type IDENTIFIER '[' INTEGER ']' ',' Declaration

    8 Type: TYPE_BOOL
    9     | TYPE_CHAR
   10     | TYPE_FLOAT
   11     | TYPE_INT

   12 Statements: Statement Statements
   13           | %empty

   14 Statement: EOL
   15          | Block
   16          | Assignment
   17          | Ifstate
   18          | Whilestate

   19 Block: '{' Statements '}'

   20 Assignment: IDENTIFIER '=' Expression EOL
   21           | IDENTIFIER '[' Expression ']' '=' Expression EOL

   22 Ifstate: RESV_IF '(' Expression ')' Statement
   23        | RESV_IF '(' Expression ')' Statement RESV_ELSE Statement

   24 Whilestate: RESV_WHILE '(' Expression ')' Statement

   25 Expression: Conjunction
   26           | Conjunction LOG_OR Conjunction

   27 Conjunction: Equality
   28            | Equality LOG_AND Equality

   29 Equality: Relation
   30         | Relation EquOp Relation

   31 EquOp: CMP_EQUAL
   32      | CMP_NOTEQUAL

   33 Relation: Addition
   34         | Addition RelOp Addition

   35 RelOp: '<'
   36      | CMP_LTEQ
   37      | CMP_GREQ
   38      | '>'

   39 Addition: Term
   40         | Term AddOp Term

   41 AddOp: '+'
   42      | '-'

   43 Term: Factor
   44     | Factor MulOp Factor

   45 MulOp: '*'
   46      | '/'
   47      | '%'

   48 Factor: Primary
   49       | UnaryOp Primary

   50 UnaryOp: '-'
   51        | '!'

   52 Primary: IDENTIFIER
   53        | IDENTIFIER '[' Expression ']'
   54        | Literal
   55        | '(' Expression ')'
   56        | Type '(' Expression ')'

   57 Literal: INTEGER
   58        | FLOAT
   59        | CHAR
   60        | RESV_TRUE
   61        | RESV_FALSE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 51
'%' (37) 47
'(' (40) 1 22 23 24 55 56
')' (41) 1 22 23 24 55 56
'*' (42) 45
'+' (43) 41
',' (44) 6 7
'-' (45) 42 50
'/' (47) 46
'<' (60) 35
'=' (61) 20 21
'>' (62) 38
'[' (91) 5 7 21 53
']' (93) 5 7 21 53
'{' (123) 1 19
'}' (125) 1 19
error (256)
CMP_EQUAL (258) 31
CMP_NOTEQUAL (259) 32
CMP_GREQ (260) 37
CMP_LTEQ (261) 36
UMINUS (262)
RESV_IF (263) 22 23
RESV_WHILE (264) 24
RESV_TRUE (265) 60
RESV_FALSE (266) 61
RESV_MAIN (267) 1
TYPE_BOOL (268) 8
TYPE_CHAR (269) 9
TYPE_FLOAT (270) 10
TYPE_INT (271) 1 11
LOG_AND (272) 28
LOG_OR (273) 26
INTEGER (274) 5 7 57
IDENTIFIER (275) 4 5 6 7 20 21 52 53
CHAR (276) 59
FLOAT (277) 58
EOL (278) 4 5 14 20 21
RESV_ELSE (279) 23
DANGLESOLVE (280)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
Declarations (44)
    on left: 2 3, on right: 1 2
Declaration (45)
    on left: 4 5 6 7, on right: 2 6 7
Type (46)
    on left: 8 9 10 11, on right: 4 5 6 7 56
Statements (47)
    on left: 12 13, on right: 1 12 19
Statement (48)
    on left: 14 15 16 17 18, on right: 12 22 23 24
Block (49)
    on left: 19, on right: 15
Assignment (50)
    on left: 20 21, on right: 16
Ifstate (51)
    on left: 22 23, on right: 17
Whilestate (52)
    on left: 24, on right: 18
Expression (53)
    on left: 25 26, on right: 20 21 22 23 24 53 55 56
Conjunction (54)
    on left: 27 28, on right: 25 26
Equality (55)
    on left: 29 30, on right: 27 28
EquOp (56)
    on left: 31 32, on right: 30
Relation (57)
    on left: 33 34, on right: 29 30
RelOp (58)
    on left: 35 36 37 38, on right: 34
Addition (59)
    on left: 39 40, on right: 33 34
AddOp (60)
    on left: 41 42, on right: 40
Term (61)
    on left: 43 44, on right: 39 40
MulOp (62)
    on left: 45 46 47, on right: 44
Factor (63)
    on left: 48 49, on right: 43 44
UnaryOp (64)
    on left: 50 51, on right: 49
Primary (65)
    on left: 52 53 54 55 56, on right: 48 49
Literal (66)
    on left: 57 58 59 60 61, on right: 54


State 0

    0 $accept: . Program $end

    TYPE_INT  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: TYPE_INT . RESV_MAIN '(' ')' '{' Declarations Statements '}'

    RESV_MAIN  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: TYPE_INT RESV_MAIN . '(' ')' '{' Declarations Statements '}'

    '('  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: TYPE_INT RESV_MAIN '(' . ')' '{' Declarations Statements '}'

    ')'  shift, and go to state 6


State 6

    1 Program: TYPE_INT RESV_MAIN '(' ')' . '{' Declarations Statements '}'

    '{'  shift, and go to state 7


State 7

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' . Declarations Statements '}'

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 12
    Declaration   go to state 13
    Type          go to state 14


State 8

    8 Type: TYPE_BOOL .

    $default  reduce using rule 8 (Type)


State 9

    9 Type: TYPE_CHAR .

    $default  reduce using rule 9 (Type)


State 10

   10 Type: TYPE_FLOAT .

    $default  reduce using rule 10 (Type)


State 11

   11 Type: TYPE_INT .

    $default  reduce using rule 11 (Type)


State 12

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations . Statements '}'

    RESV_IF     shift, and go to state 15
    RESV_WHILE  shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    EOL         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 13 (Statements)

    Statements  go to state 20
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 13

    2 Declarations: Declaration . Declarations

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 26
    Declaration   go to state 13
    Type          go to state 14


State 14

    4 Declaration: Type . IDENTIFIER EOL
    5            | Type . IDENTIFIER '[' INTEGER ']' EOL
    6            | Type . IDENTIFIER ',' Declaration
    7            | Type . IDENTIFIER '[' INTEGER ']' ',' Declaration

    IDENTIFIER  shift, and go to state 27


State 15

   22 Ifstate: RESV_IF . '(' Expression ')' Statement
   23        | RESV_IF . '(' Expression ')' Statement RESV_ELSE Statement

    '('  shift, and go to state 28


State 16

   24 Whilestate: RESV_WHILE . '(' Expression ')' Statement

    '('  shift, and go to state 29


State 17

   20 Assignment: IDENTIFIER . '=' Expression EOL
   21           | IDENTIFIER . '[' Expression ']' '=' Expression EOL

    '['  shift, and go to state 30
    '='  shift, and go to state 31


State 18

   14 Statement: EOL .

    $default  reduce using rule 14 (Statement)


State 19

   19 Block: '{' . Statements '}'

    RESV_IF     shift, and go to state 15
    RESV_WHILE  shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    EOL         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 13 (Statements)

    Statements  go to state 32
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 20

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements . '}'

    '}'  shift, and go to state 33


State 21

   12 Statements: Statement . Statements

    RESV_IF     shift, and go to state 15
    RESV_WHILE  shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    EOL         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 13 (Statements)

    Statements  go to state 34
    Statement   go to state 21
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 22

   15 Statement: Block .

    $default  reduce using rule 15 (Statement)


State 23

   16 Statement: Assignment .

    $default  reduce using rule 16 (Statement)


State 24

   17 Statement: Ifstate .

    $default  reduce using rule 17 (Statement)


State 25

   18 Statement: Whilestate .

    $default  reduce using rule 18 (Statement)


State 26

    2 Declarations: Declaration Declarations .

    $default  reduce using rule 2 (Declarations)


State 27

    4 Declaration: Type IDENTIFIER . EOL
    5            | Type IDENTIFIER . '[' INTEGER ']' EOL
    6            | Type IDENTIFIER . ',' Declaration
    7            | Type IDENTIFIER . '[' INTEGER ']' ',' Declaration

    EOL  shift, and go to state 35
    '['  shift, and go to state 36
    ','  shift, and go to state 37


State 28

   22 Ifstate: RESV_IF '(' . Expression ')' Statement
   23        | RESV_IF '(' . Expression ')' Statement RESV_ELSE Statement

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 48
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 29

   24 Whilestate: RESV_WHILE '(' . Expression ')' Statement

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 58
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 30

   21 Assignment: IDENTIFIER '[' . Expression ']' '=' Expression EOL

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 59
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 31

   20 Assignment: IDENTIFIER '=' . Expression EOL

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 60
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 32

   19 Block: '{' Statements . '}'

    '}'  shift, and go to state 61


State 33

    1 Program: TYPE_INT RESV_MAIN '(' ')' '{' Declarations Statements '}' .

    $default  reduce using rule 1 (Program)


State 34

   12 Statements: Statement Statements .

    $default  reduce using rule 12 (Statements)


State 35

    4 Declaration: Type IDENTIFIER EOL .

    $default  reduce using rule 4 (Declaration)


State 36

    5 Declaration: Type IDENTIFIER '[' . INTEGER ']' EOL
    7            | Type IDENTIFIER '[' . INTEGER ']' ',' Declaration

    INTEGER  shift, and go to state 62


State 37

    6 Declaration: Type IDENTIFIER ',' . Declaration

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    Declaration  go to state 63
    Type         go to state 14


State 38

   50 UnaryOp: '-' .

    $default  reduce using rule 50 (UnaryOp)


State 39

   60 Literal: RESV_TRUE .

    $default  reduce using rule 60 (Literal)


State 40

   61 Literal: RESV_FALSE .

    $default  reduce using rule 61 (Literal)


State 41

   57 Literal: INTEGER .

    $default  reduce using rule 57 (Literal)


State 42

   52 Primary: IDENTIFIER .
   53        | IDENTIFIER . '[' Expression ']'

    '['  shift, and go to state 64

    $default  reduce using rule 52 (Primary)


State 43

   59 Literal: CHAR .

    $default  reduce using rule 59 (Literal)


State 44

   58 Literal: FLOAT .

    $default  reduce using rule 58 (Literal)


State 45

   55 Primary: '(' . Expression ')'

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 65
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 46

   51 UnaryOp: '!' .

    $default  reduce using rule 51 (UnaryOp)


State 47

   56 Primary: Type . '(' Expression ')'

    '('  shift, and go to state 66


State 48

   22 Ifstate: RESV_IF '(' Expression . ')' Statement
   23        | RESV_IF '(' Expression . ')' Statement RESV_ELSE Statement

    ')'  shift, and go to state 67


State 49

   25 Expression: Conjunction .
   26           | Conjunction . LOG_OR Conjunction

    LOG_OR  shift, and go to state 68

    $default  reduce using rule 25 (Expression)


State 50

   27 Conjunction: Equality .
   28            | Equality . LOG_AND Equality

    LOG_AND  shift, and go to state 69

    $default  reduce using rule 27 (Conjunction)


State 51

   29 Equality: Relation .
   30         | Relation . EquOp Relation

    CMP_EQUAL     shift, and go to state 70
    CMP_NOTEQUAL  shift, and go to state 71

    $default  reduce using rule 29 (Equality)

    EquOp  go to state 72


State 52

   33 Relation: Addition .
   34         | Addition . RelOp Addition

    CMP_GREQ  shift, and go to state 73
    CMP_LTEQ  shift, and go to state 74
    '>'       shift, and go to state 75
    '<'       shift, and go to state 76

    $default  reduce using rule 33 (Relation)

    RelOp  go to state 77


State 53

   39 Addition: Term .
   40         | Term . AddOp Term

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 39 (Addition)

    AddOp  go to state 80


State 54

   43 Term: Factor .
   44     | Factor . MulOp Factor

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '%'  shift, and go to state 83

    $default  reduce using rule 43 (Term)

    MulOp  go to state 84


State 55

   49 Factor: UnaryOp . Primary

    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45

    Type     go to state 47
    Primary  go to state 85
    Literal  go to state 57


State 56

   48 Factor: Primary .

    $default  reduce using rule 48 (Factor)


State 57

   54 Primary: Literal .

    $default  reduce using rule 54 (Primary)


State 58

   24 Whilestate: RESV_WHILE '(' Expression . ')' Statement

    ')'  shift, and go to state 86


State 59

   21 Assignment: IDENTIFIER '[' Expression . ']' '=' Expression EOL

    ']'  shift, and go to state 87


State 60

   20 Assignment: IDENTIFIER '=' Expression . EOL

    EOL  shift, and go to state 88


State 61

   19 Block: '{' Statements '}' .

    $default  reduce using rule 19 (Block)


State 62

    5 Declaration: Type IDENTIFIER '[' INTEGER . ']' EOL
    7            | Type IDENTIFIER '[' INTEGER . ']' ',' Declaration

    ']'  shift, and go to state 89


State 63

    6 Declaration: Type IDENTIFIER ',' Declaration .

    $default  reduce using rule 6 (Declaration)


State 64

   53 Primary: IDENTIFIER '[' . Expression ']'

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 90
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 65

   55 Primary: '(' Expression . ')'

    ')'  shift, and go to state 91


State 66

   56 Primary: Type '(' . Expression ')'

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 92
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 67

   22 Ifstate: RESV_IF '(' Expression ')' . Statement
   23        | RESV_IF '(' Expression ')' . Statement RESV_ELSE Statement

    RESV_IF     shift, and go to state 15
    RESV_WHILE  shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    EOL         shift, and go to state 18
    '{'         shift, and go to state 19

    Statement   go to state 93
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 68

   26 Expression: Conjunction LOG_OR . Conjunction

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Conjunction  go to state 94
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 69

   28 Conjunction: Equality LOG_AND . Equality

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type      go to state 47
    Equality  go to state 95
    Relation  go to state 51
    Addition  go to state 52
    Term      go to state 53
    Factor    go to state 54
    UnaryOp   go to state 55
    Primary   go to state 56
    Literal   go to state 57


State 70

   31 EquOp: CMP_EQUAL .

    $default  reduce using rule 31 (EquOp)


State 71

   32 EquOp: CMP_NOTEQUAL .

    $default  reduce using rule 32 (EquOp)


State 72

   30 Equality: Relation EquOp . Relation

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type      go to state 47
    Relation  go to state 96
    Addition  go to state 52
    Term      go to state 53
    Factor    go to state 54
    UnaryOp   go to state 55
    Primary   go to state 56
    Literal   go to state 57


State 73

   37 RelOp: CMP_GREQ .

    $default  reduce using rule 37 (RelOp)


State 74

   36 RelOp: CMP_LTEQ .

    $default  reduce using rule 36 (RelOp)


State 75

   38 RelOp: '>' .

    $default  reduce using rule 38 (RelOp)


State 76

   35 RelOp: '<' .

    $default  reduce using rule 35 (RelOp)


State 77

   34 Relation: Addition RelOp . Addition

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type      go to state 47
    Addition  go to state 97
    Term      go to state 53
    Factor    go to state 54
    UnaryOp   go to state 55
    Primary   go to state 56
    Literal   go to state 57


State 78

   41 AddOp: '+' .

    $default  reduce using rule 41 (AddOp)


State 79

   42 AddOp: '-' .

    $default  reduce using rule 42 (AddOp)


State 80

   40 Addition: Term AddOp . Term

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type     go to state 47
    Term     go to state 98
    Factor   go to state 54
    UnaryOp  go to state 55
    Primary  go to state 56
    Literal  go to state 57


State 81

   45 MulOp: '*' .

    $default  reduce using rule 45 (MulOp)


State 82

   46 MulOp: '/' .

    $default  reduce using rule 46 (MulOp)


State 83

   47 MulOp: '%' .

    $default  reduce using rule 47 (MulOp)


State 84

   44 Term: Factor MulOp . Factor

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type     go to state 47
    Factor   go to state 99
    UnaryOp  go to state 55
    Primary  go to state 56
    Literal  go to state 57


State 85

   49 Factor: UnaryOp Primary .

    $default  reduce using rule 49 (Factor)


State 86

   24 Whilestate: RESV_WHILE '(' Expression ')' . Statement

    RESV_IF     shift, and go to state 15
    RESV_WHILE  shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    EOL         shift, and go to state 18
    '{'         shift, and go to state 19

    Statement   go to state 100
    Block       go to state 22
    Assignment  go to state 23
    Ifstate     go to state 24
    Whilestate  go to state 25


State 87

   21 Assignment: IDENTIFIER '[' Expression ']' . '=' Expression EOL

    '='  shift, and go to state 101


State 88

   20 Assignment: IDENTIFIER '=' Expression EOL .

    $default  reduce using rule 20 (Assignment)


State 89

    5 Declaration: Type IDENTIFIER '[' INTEGER ']' . EOL
    7            | Type IDENTIFIER '[' INTEGER ']' . ',' Declaration

    EOL  shift, and go to state 102
    ','  shift, and go to state 103


State 90

   53 Primary: IDENTIFIER '[' Expression . ']'

    ']'  shift, and go to state 104


State 91

   55 Primary: '(' Expression ')' .

    $default  reduce using rule 55 (Primary)


State 92

   56 Primary: Type '(' Expression . ')'

    ')'  shift, and go to state 105


State 93

   22 Ifstate: RESV_IF '(' Expression ')' Statement .
   23        | RESV_IF '(' Expression ')' Statement . RESV_ELSE Statement

    $default  reduce using rule 22 (Ifstate)


State 94

   26 Expression: Conjunction LOG_OR Conjunction .

    $default  reduce using rule 26 (Expression)


State 95

   28 Conjunction: Equality LOG_AND Equality .

    $default  reduce using rule 28 (Conjunction)


State 96

   30 Equality: Relation EquOp Relation .

    $default  reduce using rule 30 (Equality)


State 97

   34 Relation: Addition RelOp Addition .

    $default  reduce using rule 34 (Relation)


State 98

   40 Addition: Term AddOp Term .

    $default  reduce using rule 40 (Addition)


State 99

   44 Term: Factor MulOp Factor .

    $default  reduce using rule 44 (Term)


State 100

   24 Whilestate: RESV_WHILE '(' Expression ')' Statement .

    $default  reduce using rule 24 (Whilestate)


State 101

   21 Assignment: IDENTIFIER '[' Expression ']' '=' . Expression EOL

    '-'         shift, and go to state 38
    RESV_TRUE   shift, and go to state 39
    RESV_FALSE  shift, and go to state 40
    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11
    INTEGER     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    CHAR        shift, and go to state 43
    FLOAT       shift, and go to state 44
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Type         go to state 47
    Expression   go to state 106
    Conjunction  go to state 49
    Equality     go to state 50
    Relation     go to state 51
    Addition     go to state 52
    Term         go to state 53
    Factor       go to state 54
    UnaryOp      go to state 55
    Primary      go to state 56
    Literal      go to state 57


State 102

    5 Declaration: Type IDENTIFIER '[' INTEGER ']' EOL .

    $default  reduce using rule 5 (Declaration)


State 103

    7 Declaration: Type IDENTIFIER '[' INTEGER ']' ',' . Declaration

    TYPE_BOOL   shift, and go to state 8
    TYPE_CHAR   shift, and go to state 9
    TYPE_FLOAT  shift, and go to state 10
    TYPE_INT    shift, and go to state 11

    Declaration  go to state 107
    Type         go to state 14


State 104

   53 Primary: IDENTIFIER '[' Expression ']' .

    $default  reduce using rule 53 (Primary)


State 105

   56 Primary: Type '(' Expression ')' .

    $default  reduce using rule 56 (Primary)


State 106

   21 Assignment: IDENTIFIER '[' Expression ']' '=' Expression . EOL

    EOL  shift, and go to state 108


State 107

    7 Declaration: Type IDENTIFIER '[' INTEGER ']' ',' Declaration .

    $default  reduce using rule 7 (Declaration)


State 108

   21 Assignment: IDENTIFIER '[' Expression ']' '=' Expression EOL .

    $default  reduce using rule 21 (Assignment)
